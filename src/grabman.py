#!/usr/bin/env python
#coding:utf-8

#
# grabman.py, to gernerate man.h for jsh
#
# Copyright (C) 2022 Digger Wu (digger.wu@linkbroad.com)
#

import os
import sys
import syslog
import re
import shlex
import subprocess

cmds = ['id', 'pwd', 'passwd', 'uname', 'ls', 'mkdir', \
        'rm', 'rmdir', 'touch', 'cp', 'tar', 'zip', 'unzip', \
        'vim', 'cat', 'more', 'tail', 'grep', \
        'ssh', 'ping', 'traceroute', 'scp', 'sftp', 'wget', 'curl', \
        'crontab' ]

def grabman(name):
    cmdline = 'man %s' % name

    try:
        fp = subprocess.Popen(shlex.split(cmdline), shell=False, stdout=subprocess.PIPE, stderr=subprocess.STDOUT).stdout
        num = 0
        last = text = ''
        while num < 8:
            line = fp.readline().strip()
            if last == b'NAME':
                text = line
                break
            else:
                last = line
                num += 1

        if text and len(text) > len(name) + 2:
            # ssh/sftp/scp use this wired 'â€”' which is not single byte char
            pfx = [b' -', b' \xe2\x80\x94']
            for p in pfx:
                offset = text.find(p)
                if offset >= 0:
                    text = text[offset+len(p):].strip()
                    return text
        else:
            return ""

    except Exception as ex:
        return ""

def gencode():
    print(
'''
/*
 * This code is generated by grabman.py, better not to edit.
 */
#ifndef _JSH_MAN_H
#define _JSH_MAN_H
'''
    )

    print(
'''
struct man {
    char    *cmd;
    char    *desc;
} man[] = { 
'''
    )

    for c in cmds:
        name = "\"%s\"," % c
        desc = "\"%s\"" % grabman(c).decode()
        print("    {%-20s %s}," % (name, desc))

    print("    {%-20s %s}" % ("NULL,", "NULL"))

    print(
'''
};
'''
    )

    print(
'''
#endif  /* _JSH_MAN_H */
'''
    )


if __name__ == "__main__":
    gencode()
